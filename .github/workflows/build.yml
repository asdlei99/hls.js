name: Build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # TODO needs full history for version
      
      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'
  
      - name: install and build
        run: |
          npm ci
          npm run lint
          npm run type-check
          npm run build
          npm run docs
          # check that hls.js doesn't error if requiring in node
          # see https://github.com/video-dev/hls.js/pull/1642
          node -e 'require("./" + require("./package.json").main)'
        env:
          CI: true

      - name: upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            **
            !**/[.]*/**
            !**/node_modules/

  test_unit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # TODO needs full history for version
      
      # TODO dedupe
      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build

      - name: run unit tests
        run: |
          npm ci
          npm run test:unit
        env:
          CI: true

  test_functional_required:
    needs: build # TODO change to test_unit so don't waste resources if unit test fail
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 1 # TODO
      matrix:
        config: [chrome_win_10]

        include:
        - config: chrome_win_10
          ua: chrome
          os: Windows 10
        
    steps:
      - uses: actions/checkout@v2 # TODO needs full history for version
      
      # TODO dedupe
      - name: cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
      - name: use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: download build
        uses: actions/download-artifact@v2
        with:
          name: build

      # requires SAUCE_USERNAME and SAUCE_ACCESS_KEY
      # TODO don't run on forks
      - name: run functional tests
        run: |
          npm ci
          echo "action id"
          echo $GITHUB_ACTION
          SAUCE_TUNNEL_ID="$GITHUB_ACTION" npm run test:func
        env:
          CI: true
          UA: ${{ matrix.ua }}
          OS: ${{ matrix.os }}
